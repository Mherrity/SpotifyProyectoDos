{"version":3,"sources":["Login.js","credientals.js","App.js","index.js"],"names":["Login","alt","src","Component","Cred","spotifyApi","SpotifyWebApi","App","onSuccess","response","setAccessToken","access_token","setState","token","removeArtist","artistID","Artists","console","log","state","getArtistRelatedArtists","then","len","artists","length","Math","floor","random","incrementSong","ArtistID","index","Artist","songDict","prevState","Object","assign","decrementSong","makeSongDict","tracks","map","track","preview_url","getTopArtists","getMyTopArtists","items","forEach","artist","id","images","url","name","popularity","Ready","getRelatedArtists","currentArtist","prevArtist","playMusic","currentlyPlaying","pause","CurrentPlaying","Audio","play","getArtistTopTracks","saveSong","addToMySavedTracks","stopMusic","className","this","onClick","clientId","redirectUri","scope","img","ID","Show","key","Name","Image","onMouseEnter","onMouseOut","Pop","size","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.02cde13b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nexport default class Login extends Component {\n\n    render(){\n    return (\n        <img alt='whoops' src= 'https://images.pexels.com/photos/50582/selfie-monkey-self-portrait-macaca-nigra-50582.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'/>\n    );\n    }\n}\n","const Cred = {\n    'ClientID' : 'e5a3b8fc89bc4329808110b17b0ab96e',\n    'redirectUri' : 'https://mherrity.github.io/SpotifyProyectoDos/callback'\n}\nexport default Cred;","import React, { Component } from 'react';\nimport './App.css';\nimport { FaPlus, \n        FaTimes,\n        FaChevronRight,\n        FaChevronLeft,\n} from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { importDeclaration, importDefaultSpecifier } from '@babel/types';\nimport Cred from './credientals'\n\nimport SpotifyLogin from 'react-spotify-login';\n\n\n\n\nvar spotifyApi = new SpotifyWebApi();\nclass App extends Component {\n  constructor(){\n    super();\n\n  \n    this.state = {\n      images: false,\n      currentlyPlaying: null,\n      Artists: {},\n      token: null,\n      prevArtist: null,\n      currentArtist: null,\n      Ready: false\n    }\n  }\n\n  onSuccess=(response)=>{\n    spotifyApi.setAccessToken(response.access_token)\n    this.setState({token: response.access_token})\n  }\nremoveArtist=(artistID)=>{\n  this.setState(({ Artists }) => ({\n    Artists: {\n      ...Artists,\n      [artistID]: {\n       \"Show\": false }\n    }\n  }),()=>console.log(this.state.Artists))\n  spotifyApi.spotifyApi.getArtistRelatedArtists(artistID)\n  .then((response)=>{\n    let len =response.artists.length\n    let index = Math.floor(Math.random() * len)   \n} )\n}\n\n\n  incrementSong=(ArtistID)=>{\n   let index = this.state.Artists[ArtistID]['CurrentPlaying']\n   let len = this.state.Artist[ArtistID].songDict.length\n   console.log(index)\n   console.log(len)\n   this.setState(prevState => {\n    let Artist = Object.assign({}, prevState.Artists);  // creating copy of state variable jasper\n    Artist[ArtistID]['CurrentPlaying'] =  index+1===len ? 0 : index+1   // update the name property, assign a new value                 \n    return {Artist};                                 // return new object jasper object\n  })\n  console.log(this.state.Artists[ArtistID]['CurrentPlaying'])\n  }\n\n  decrementSong=(ArtistID)=>{\n    let index = this.state.Artists[ArtistID]['CurrentPlaying']\n    let len = this.state.Artist[ArtistID].songDict.length\n    console.log(index)\n    console.log(len)\n    this.setState(prevState => {\n     let Artist = Object.assign({}, prevState.Artists);  // creating copy of state variable jasper\n     Artist[ArtistID]['CurrentPlaying'] =  index-1===-1 ? len-1 : index-1   // update the name property, assign a new value                 \n     return {Artist};                                 // return new object jasper object\n   })\n   console.log(this.state.Artists[ArtistID]['CurrentPlaying'])\n   }\n  \n  makeSongDict=(response,artistID)=>{\n    this.setState(prevState => {\n      let Artist = Object.assign({}, prevState.Artists);  // creating copy of state variable jasper\n      Artist[artistID]['songDict'] =  response.tracks.map((track)=>{\n          return  track.preview_url\n      })                  // update the name property, assign a new value                 \n      return {Artist};                                 // return new object jasper object\n    })\n  }\n\n\n\n\n\n  getTopArtists=()=>{\n    spotifyApi.getMyTopArtists()\n    .then((response)=>{\n      response.items.forEach((artist)=> { \n        this.setState(({ Artists }) => ({\n         Artists: {\n           ...Artists,\n           [artist.id]: {\"Image\": artist.images ? artist.images[0].url : 'https://i1.sndcdn.com/avatars-000047137234-96td0a-t500x500.jpg', \n           \"Name\": artist.name, \n           \"songDict\": null, \n           \"Pop\": artist.popularity,\n           \"CurrentPlaying\": 0, \n            \"Show\": true  }\n         }\n       }),this.setState({Ready: true}))\n  })  \n      this.setState({\n          images: response.items.map(function (artist) { \n      return {\"Artist\": artist.name, \n              \"Image\": artist.images ? artist.images[0].url : 'https://i1.sndcdn.com/avatars-000047137234-96td0a-t500x500.jpg', \n              \"ID\": artist.id}\n       }) \n    })\n  })\n  }\n\n\n\ngetRelatedArtists=(ArtistID)=>{\n  this.setState({currentArtist: ArtistID,\n                prevArtist: this.state.currentArtist})\n  console.log(ArtistID)\n  spotifyApi.getArtistRelatedArtists(ArtistID)\n  .then((response)=>{\n    response.artists.forEach((artist)=> { \n      if(!this.state.Artists[artist.id]){\n      this.setState(({ Artists }) => ({\n       Artists: {\n         ...Artists,\n         [artist.id]: {\n          \"Image\": artist.images ? artist.images[0].url : 'https://i1.sndcdn.com/avatars-000047137234-96td0a-t500x500.jpg', \n         \"Name\": artist.name, \n         \"songDict\": null, \n         \"Pop\": artist.popularity,\n         \"CurrentPlaying\": 0,\n          \"Show\": true }\n       }\n     })) }\n   })  \n    this.setState({\n        images: response.artists.map(function (artist) { \n    return {\"Artist\": artist.name, \n    \"Image\": artist.images ? artist.images[0].url : 'https://i1.sndcdn.com/avatars-000047137234-96td0a-t500x500.jpg', \n            \"ID\": artist.id }\n     }) \n  })\n  \n})\n}\n\n\nplayMusic=(artistID)=>{\n  if (!this.state.Artists[artistID].songDict){\n  spotifyApi.getArtistTopTracks(artistID,\"US\")\n  .then((response)=>{ \n    this.makeSongDict(response,artistID)\n    this.state.currentlyPlaying && this.state.currentlyPlaying.pause()\n\n    let index = this.state.Artists[artistID].CurrentPlaying\n    this.setState({\n        currentlyPlaying: new Audio(this.state.Artists[artistID].songDict[index]) || null\n     }) \n     this.state.currentlyPlaying && this.state.currentlyPlaying.play()\n     console.log(this.state.Artists)\n  }) }\n  else{\n    this.state.currentlyPlaying && this.state.currentlyPlaying.pause()\n    let index = this.state.Artists[artistID].CurrentPlaying\n    this.setState({\n        currentlyPlaying: new Audio(this.state.Artists[artistID].songDict[index]) || null\n     },()=>{\n     this.state.currentlyPlaying.play()})\n     console.log(this.state.Artists)\n  }\n}\n\n\nsaveSong=(artistID)=>{\n  spotifyApi.getArtistTopTracks(artistID,\"US\")\n  .then((response)=>{ \n    let index= this.state.Artists[artistID].CurrentPlaying\n     let id = response.tracks[index].id\n     spotifyApi.addToMySavedTracks([id]).then((response)=>console.log(response))\n     })\n}\n\nstopMusic=()=>{\n  this.state.currentlyPlaying && this.state.currentlyPlaying.pause()\n  this.setState({\n    currentlyPlaying: null\n }) \n}\n\n  render() {\n    return (\n    \n      <div className=\"App\">\n        {this.state.prevArtist\n        && <button onClick={()=>{this.getRelatedArtists(this.state.prevArtist)}}>\n        <text>Bacc</text>\n         </button> }\n        <SpotifyLogin \n        clientId= {Cred['ClientID']}\n        redirectUri= {Cred['redirectUri']}\n        scope= 'user-read-private user-read-email user-library-read user-top-read user-library-modify'\n        onSuccess={ (response)=>{this.onSuccess(response)} }\n        />\n          \n        <div className=\"containerParent\">\n      \n      {this.state.images && this.state.Ready && this.state.images.map((img) => {\n        if(this.state.Artists[img.ID].Show){\n       return (\n        <div key= {img.ID} className=\"container\">\n        < img key= {img.Name} \n        className=\"circular--portrait\" \n        alt={img.Artist} \n        src = {img.Image} \n        onClick={()=>this.getRelatedArtists(img.ID)}\n        onMouseEnter={()=>this.playMusic(img.ID)}\n        onMouseOut={()=>this.stopMusic()}\n         />\n        <div  key= {img.Name} className=\"centered\">{img.Artist}</div>\n     \n       \n      <h1 className='Popularity'>{this.state.Artists[img.ID].Pop}</h1>\n      <FaTimes className='red-minus' size={35} onClick={()=>this.removeArtist(img.ID)}/>\n      <FaPlus className='green-plus' size={35} onClick={()=>this.saveSong(img.ID)}/>\n      <FaChevronLeft className='chevron-left' size={20} onClick={()=>this.decrementSong(img.ID)} />\n      <FaChevronRight className='chevron-right' size={20} onClick={()=>this.incrementSong(img.ID)} />\n         </div>      \n          )}} )} \n           \n        </div>\n      \n       \n        {this.state.token &&\n          <button onClick={() => this.getTopArtists()}>\n            Get Top Artists\n          </button>\n        }\n      </div>\n      \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './Login'\nimport App from './App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\n\n\nReactDOM.render(\n    <Router>\n     <Route path ='/' component = {App}/>\n     <Route path ='/SpotifyProyectoDoc/callback' component = {Login}/>\n    </Router>\n    \n    , document.getElementById('root'));\n\n\n"],"sourceRoot":""}